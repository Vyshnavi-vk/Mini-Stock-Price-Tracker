[{"C:\\Users\\lenovo\\OneDrive\\Desktop\\Projects\\Mini Stock Price Tracker\\client\\src\\index.js":"1","C:\\Users\\lenovo\\OneDrive\\Desktop\\Projects\\Mini Stock Price Tracker\\client\\src\\App.js":"2","C:\\Users\\lenovo\\OneDrive\\Desktop\\Projects\\Mini Stock Price Tracker\\client\\src\\updatePerMinute.js":"3","C:\\Users\\lenovo\\OneDrive\\Desktop\\Projects\\Mini Stock Price Tracker\\client\\src\\UpdatePerMinute.js":"4"},{"size":258,"mtime":1700405811105,"results":"5","hashOfConfig":"6"},{"size":1953,"mtime":1700461168657,"results":"7","hashOfConfig":"6"},{"size":983,"mtime":1700401310379,"results":"8","hashOfConfig":"6"},{"size":1054,"mtime":1700459781176,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1h45n6r",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lenovo\\OneDrive\\Desktop\\Projects\\Mini Stock Price Tracker\\client\\src\\index.js",[],[],["23","24","25","26","27","28"],"C:\\Users\\lenovo\\OneDrive\\Desktop\\Projects\\Mini Stock Price Tracker\\client\\src\\App.js",["29","30"],[],"C:\\Users\\lenovo\\OneDrive\\Desktop\\Projects\\Mini Stock Price Tracker\\client\\src\\updatePerMinute.js",["31"],[],"C:\\Users\\lenovo\\OneDrive\\Desktop\\Projects\\Mini Stock Price Tracker\\client\\src\\UpdatePerMinute.js",["32"],[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":49,"column":14,"nodeType":"47","messageId":"48","endLine":49,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":72,"column":25,"nodeType":"51","messageId":"52","endLine":72,"endColumn":27},{"ruleId":"53","severity":1,"message":"54","line":15,"column":26,"nodeType":"47","endLine":15,"endColumn":48},{"ruleId":"53","severity":1,"message":"54","line":17,"column":26,"nodeType":"47","endLine":17,"endColumn":48},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["55"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","Assignments to the 'prevPrice' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-object-constructor"]